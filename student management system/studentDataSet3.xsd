<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="studentDataSet3" targetNamespace="http://tempuri.org/studentDataSet3.xsd" xmlns:mstns="http://tempuri.org/studentDataSet3.xsd" xmlns="http://tempuri.org/studentDataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="studentConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="studentConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.student_management_system.Properties.Settings.GlobalReference.Default.studentConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="moneyTableAdapter" GeneratorDataComponentClassName="moneyTableAdapter" Name="money" UserDataComponentName="moneyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="studentConnectionString (Settings)" DbObjectName="student.dbo.money" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[money] WHERE (([id] = @Original_id) AND ([Course] = @Original_Course) AND ([Fee] = @Original_Fee) AND ([Teacher_Salary] = @Original_Teacher_Salary))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Course" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Course" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Teacher_Salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[money] ([Course], [Fee], [Teacher_Salary]) VALUES (@Course, @Fee, @Teacher_Salary);
SELECT id, Course, Fee, Teacher_Salary FROM money WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Course" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Course" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Teacher_Salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Course, Fee, Teacher_Salary FROM dbo.money</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[money] SET [Course] = @Course, [Fee] = @Fee, [Teacher_Salary] = @Teacher_Salary WHERE (([id] = @Original_id) AND ([Course] = @Original_Course) AND ([Fee] = @Original_Fee) AND ([Teacher_Salary] = @Original_Teacher_Salary));
SELECT id, Course, Fee, Teacher_Salary FROM money WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Course" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Course" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fee" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Teacher_Salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Course" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Course" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fee" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fee" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Teacher_Salary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Teacher_Salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="student.dbo.money" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Course" DataSetColumn="Course" />
              <Mapping SourceColumn="Fee" DataSetColumn="Fee" />
              <Mapping SourceColumn="Teacher_Salary" DataSetColumn="Teacher_Salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="studentDataSet3" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="studentDataSet3" msprop:Generator_DataSetName="studentDataSet3">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="money" msprop:Generator_RowEvHandlerName="moneyRowChangeEventHandler" msprop:Generator_RowDeletedName="moneyRowDeleted" msprop:Generator_RowDeletingName="moneyRowDeleting" msprop:Generator_RowEvArgName="moneyRowChangeEvent" msprop:Generator_TablePropName="money" msprop:Generator_RowChangedName="moneyRowChanged" msprop:Generator_RowChangingName="moneyRowChanging" msprop:Generator_TableClassName="moneyDataTable" msprop:Generator_RowClassName="moneyRow" msprop:Generator_TableVarName="tablemoney" msprop:Generator_UserTableName="money">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="Course" msprop:Generator_ColumnPropNameInRow="Course" msprop:Generator_ColumnPropNameInTable="CourseColumn" msprop:Generator_ColumnVarNameInTable="columnCourse" msprop:Generator_UserColumnName="Course">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Fee" msprop:Generator_ColumnPropNameInRow="Fee" msprop:Generator_ColumnPropNameInTable="FeeColumn" msprop:Generator_ColumnVarNameInTable="columnFee" msprop:Generator_UserColumnName="Fee">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Teacher_Salary" msprop:Generator_ColumnPropNameInRow="Teacher_Salary" msprop:Generator_ColumnPropNameInTable="Teacher_SalaryColumn" msprop:Generator_ColumnVarNameInTable="columnTeacher_Salary" msprop:Generator_UserColumnName="Teacher_Salary">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:money" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>